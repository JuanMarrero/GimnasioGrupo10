package gimnasiogrupo10.vistas;

import gimnasiogrupo10.AccesoADatos.*;
import gimnasiogrupo10.entidades.*;
import java.util.ArrayList;
import java.util.List;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;


public class gestionMembresia extends javax.swing.JInternalFrame {
    private SocioData socioData;
    private ClasesData claseData;
    private EntrenadoresData entrenadoresData;
    private AsistenciaData asistenciaData;
    private MembresiasData membresiasData;
    private DefaultTableModel tablaModelo;
    
    List<Socios>listaS;
      
    public gestionMembresia() {
        
    initComponents();
    socioData = new SocioData();
    claseData= new ClasesData();
    entrenadoresData = new EntrenadoresData();
    asistenciaData = new AsistenciaData();
    membresiasData = new MembresiasData();
    listaS = socioData.listarSocios();
    
    
    tablaModelo=new DefaultTableModel();
    armarCabeceraTabla();
    cargarSocios();
    


    }
        private void armarCabeceraTabla(){
        ArrayList <Object> filaCabecera = new ArrayList<>();
        filaCabecera.add("ID");
        filaCabecera.add("Nombre");
        filaCabecera.add("Apellido");
        filaCabecera.add("Pases");
        filaCabecera.add("FechaInicio");
        filaCabecera.add("FechaFin");
        filaCabecera.add("Estado");
        for(Object it: filaCabecera){
         tablaModelo.addColumn(it);
        }
        
        jtTabla.setModel(tablaModelo);
    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jDesktopPane2 = new javax.swing.JDesktopPane();
        jLabel4 = new javax.swing.JLabel();
        jbBuscar = new javax.swing.JButton();
        jScrollPane2 = new javax.swing.JScrollPane();
        jtTabla = new javax.swing.JTable();
        jbSalir = new javax.swing.JButton();
        jbAnular = new javax.swing.JButton();
        jLabel3 = new javax.swing.JLabel();
        jSeparator1 = new javax.swing.JSeparator();
        comboSocios = new javax.swing.JComboBox<>();
        jDesktopPane1 = new javax.swing.JDesktopPane();

        jDesktopPane2.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel4.setText("ID Socio");
        jDesktopPane2.add(jLabel4, new org.netbeans.lib.awtextra.AbsoluteConstraints(68, 74, -1, -1));

        jbBuscar.setText("Buscar");
        jbBuscar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbBuscarActionPerformed(evt);
            }
        });
        jDesktopPane2.add(jbBuscar, new org.netbeans.lib.awtextra.AbsoluteConstraints(383, 65, 74, 34));

        jtTabla.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jScrollPane2.setViewportView(jtTabla);

        jDesktopPane2.add(jScrollPane2, new org.netbeans.lib.awtextra.AbsoluteConstraints(27, 163, 430, 140));

        jbSalir.setText("Salir");
        jbSalir.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbSalirActionPerformed(evt);
            }
        });
        jDesktopPane2.add(jbSalir, new org.netbeans.lib.awtextra.AbsoluteConstraints(373, 346, 65, -1));

        jbAnular.setText("Anular");
        jbAnular.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbAnularActionPerformed(evt);
            }
        });
        jDesktopPane2.add(jbAnular, new org.netbeans.lib.awtextra.AbsoluteConstraints(62, 344, 70, 37));

        jLabel3.setFont(new java.awt.Font("Ebrima", 1, 18)); // NOI18N
        jLabel3.setText("Gestión Membresias");
        jDesktopPane2.add(jLabel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(144, 6, -1, -1));

        jSeparator1.setBackground(new java.awt.Color(204, 204, 204));
        jSeparator1.setForeground(new java.awt.Color(204, 204, 204));
        jDesktopPane2.add(jSeparator1, new org.netbeans.lib.awtextra.AbsoluteConstraints(15, 36, 449, 14));

        jDesktopPane2.add(comboSocios, new org.netbeans.lib.awtextra.AbsoluteConstraints(143, 69, 189, -1));

        javax.swing.GroupLayout jDesktopPane1Layout = new javax.swing.GroupLayout(jDesktopPane1);
        jDesktopPane1.setLayout(jDesktopPane1Layout);
        jDesktopPane1Layout.setHorizontalGroup(
            jDesktopPane1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 480, Short.MAX_VALUE)
        );
        jDesktopPane1Layout.setVerticalGroup(
            jDesktopPane1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 440, Short.MAX_VALUE)
        );

        jDesktopPane2.add(jDesktopPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, -30, 480, 440));

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jDesktopPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 472, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jDesktopPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 406, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jbBuscarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbBuscarActionPerformed
        // Obtener el socio seleccionado del combo
        Socios socioSeleccionado = (Socios) comboSocios.getSelectedItem();
        
        if (socioSeleccionado != null) {
            // Limpiar la tabla antes de agregar nuevos datos
            limpiarTabla();
            
            // Obtener las membresías del socio seleccionado
            List<Membresias> membresias = membresiasData.obtenerInscripcionesPorSocio(socioSeleccionado.getID_Socio());
            
            // Llenar la tabla con las membresías encontradas
            for (Membresias membresia : membresias) {
                Object[] fila = {
                    membresia.getID_Membresia(),
                    membresia.getSocio().getNombre(),
                    membresia.getSocio().getApellido(),
                    membresia.getCantidadPases(),
                    membresia.getFecha_Inicio(),
                    membresia.getFecha_Fin(),
                    membresia.isEstado()
                };
                tablaModelo.addRow(fila);
            }
        }
    }//GEN-LAST:event_jbBuscarActionPerformed

    private void jbSalirActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbSalirActionPerformed
        dispose();
        // TODO add your handling code here:
    }//GEN-LAST:event_jbSalirActionPerformed

    private void jbAnularActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbAnularActionPerformed
           
    int filaSeleccionada = jtTabla.getSelectedRow();
    
    if (filaSeleccionada != -1) { // Si hay una fila seleccionada
        // Obtener el modelo de la tabla
        DefaultTableModel modeloTabla = (DefaultTableModel) jtTabla.getModel();
        
        // Obtener el ID de la membresía desde la tabla
        int idMembresia = (int) modeloTabla.getValueAt(filaSeleccionada, 0); 
        
        
        // Cambiar el estado de la membresía a false
        boolean exito = membresiasData.cancelarMembresia(idMembresia);
        
        if (exito) {
            // Actualizar la tabla después de cambiar el estado
            modeloTabla.removeRow(filaSeleccionada); 
            
            JOptionPane.showMessageDialog(this, "Membresía anulada correctamente");
        } else {
            JOptionPane.showMessageDialog(this, "No se pudo anular la membresía");
        }
    } else {
        JOptionPane.showMessageDialog(this, "Selecciona una membresía para anular");
    }
 
    }//GEN-LAST:event_jbAnularActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JComboBox<Socios> comboSocios;
    private javax.swing.JDesktopPane jDesktopPane1;
    private javax.swing.JDesktopPane jDesktopPane2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JSeparator jSeparator1;
    private javax.swing.JButton jbAnular;
    private javax.swing.JButton jbBuscar;
    private javax.swing.JButton jbSalir;
    private javax.swing.JTable jtTabla;
    // End of variables declaration//GEN-END:variables

    
    private void cargarSocios() {
        for (Socios socio: listaS){
        comboSocios.addItem(socio);
        }
    }    
    
    
    private void limpiarTabla() {
        while (tablaModelo.getRowCount() > 0) {
            tablaModelo.removeRow(0);
        }
    }  
}
